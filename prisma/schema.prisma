generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

}

enum ClanName {
  BANU_HAQIM
  BRUJAH
  CAITIFF
  GANGREL
  HECATA
  LASOMBRA
  MALKAVIAN
  NOSFERATU
  RAVNOS
  SALUBRI
  THE_MINISTRY
  TOREADOR
  TREMERE
  TZIMISCE
  VENTRUE
}

model Clan {
  id          Int          @id @default(autoincrement())
  name        ClanName     @unique
  disciplines Discipline[]
  Kindred     Kindred[]
}

model Power {
  id           Int        @id @default(autoincrement())
  discipline   Discipline @relation(fields: [disciplineId], references: [id])
  disciplineId Int

  level         Int
  name          PowerName @unique
  duration      Duration
  cost          PowerCost @default(FREE)
  learnedPowers LearnedPower[]

  firstPoolResource     PoolResource @default(NONE)
  secondPoolResource    PoolResource @default(NONE)
  vsFirstPoolResource   PoolResource @default(NONE)
  vsSecondPoolResource  PoolResource @default(NONE)
}

enum PoolResource {
    NONE
    //SKILLS
    ATHLETICS

    ANIMAL_KIN

    SUBTERFUGE
    SURVIVAL

    //ATTRIBUTES
    STRENGTH
    DEXTERITY

    CHARISMA
    MANIPULATION
    COMPOSURE

    INTELLIGENCE
    WITS
    RESOLVE
    //DISCIPLINES
    ANIMALISM
    AUSPEX
    DOMINATE
    PRESENCE

}

model LearnedPower {
  id Int @id @default(autoincrement())

  basePower   Power   @relation(fields: [basePowerId], references: [id])
  basePowerId Int
  kindred     Kindred @relation(fields: [kindredId], references: [id])
  kindredId   Int

  @@unique([basePowerId, kindredId])
}

enum DicePoolOption {
  CHARISMA
  DOMINATION
}

enum Duration {
  SCENE
  PASSIVE
  TURN
  PERMANENT
  INDEFINITELY
  DEACTIVATE
  DESIRED
  RESISTED
}

enum PowerCost {
    FREE
    ROUSE_CHECK
    FREE_RC
}

enum PowerName {
 //ANIMALISM
 BOND_FAMULUS
 SENSE_THE_BEAST
 FERAL_WHISPERS
 ANIMAL_SUCCULENCE

 //AUSPEX
 HEIGHTENED_SENSES
 SENSE_THE_UNSEEN
 PREMONITION
 SCRY_THE_SOUL
 SHARE_THE_SENSES

 //BLOODSORCERY

 //CELERITY
 CATS_GRACE
 RAPID_REFLEXES
 FLEETNESS
 BLINK
 TRAVERSAL

 //DOMINATE
 CLOUD_MEMORY
 COMPEL
 MESMERIZE
 THE_FORGETFUL_MIND

 //FORTITUDE
 RESILIENCE
 UNSWAYABLE_MIND
 COMPELL

 //OBFUSCATE

 //OBLIVION

 //POTENCE
 LETHAL_BODY
 SOARING_LEAP
 PROWESS

 //PRESENCE
 AWE
 DAUNT
 LINGERING_KISS

 //PROTEAN
 EYES_OF_THE_BEAST
 WEIGHT_OF_THE_FEATHER
 FERAL_WEAPONS
}

model Discipline {
  id              Int               @id @default(autoincrement())
  name            DisciplineName
  clans           Clan[]
  KnownDiscipline KnownDiscipline[]
  powers          Power[]
}

model KnownDiscipline {
  id             Int     @id @default(autoincrement())
  points         Int     @default(0)
  learntFromClan Boolean @default(false)

  baseDiscipline   Discipline @relation(fields: [baseDisciplineId], references: [id])
  baseDisciplineId Int

  Kindred   Kindred @relation(fields: [kindredId], references: [id])
  kindredId Int

  @@unique([baseDisciplineId, kindredId])
}

enum DisciplineName {
  ANIMALISM
  AUSPEX
  BLOOD_SORCERY
  CELERITY
  DOMINATE
  FORTITUDE
  OBFUSCATE
  OBLIVION
  POTENCE
  PRESENCE
  PROTEAN
}

model Kindred {
  id         Int    @id @default(autoincrement())
  name       String
  experience Int    @default(0)
  ambition   String
  desire     String
  sire       String @default("")

  clan   Clan @relation(fields: [clanId], references: [id])
  clanId Int

  strength     Int @default(0)
  dexterity    Int @default(0)
  stamina      Int @default(0)
  charisma     Int @default(0)
  manipulation Int @default(0)
  composure    Int @default(0)
  intelligence Int @default(0)
  wits         Int @default(0)
  resolve      Int @default(0)

  aggravatedHealth  Int @default(0)
  superficialHealth Int @default(0)

  aggravatedWillpower  Int @default(0)
  superficialWillpower Int @default(0)

  humanity        Int @default(0)
  damagedHumanity Int @default(0)

  hunger Int @default(0)

  skills      Skill[]
  disciplines KnownDiscipline[]
  powers      LearnedPower[]

  chronicles Chronicle[]
}

model Skill {
  id        Int       @id @default(autoincrement())
  name      SkillName
  points    Int
  type      SkillType
  Kindred   Kindred   @relation(fields: [kindredId], references: [id])
  kindredId Int

  @@unique([name, kindredId])
}

enum SkillType {
  PHYSICAL
  SOCIAL
  MENTAL
}

enum SkillName {
  ATHLETICS
  BRAWL
  CRAFT
  DRIVE
  FIREARMS
  MELEE
  LARCENY
  STEALTH
  SURVIVAL
  ANIMAL_KEN
  //SOCIAL
  ETIQUETTE
  INSIGHT
  INTIMIDATION
  LEADERSHIP
  PERFORMANCE
  PERSUASION
  STREETWISE
  SUBTERFUGE
  ACADEMICS
  // MENTAL
  AWARENESS
  FINANCE
  INVESTIGATION
  MEDICINE
  OCCULT
  POLITICS
  SCIENCE
  TECHNOLOGY
}

model Chronicle {
  id      Int       @id @default(autoincrement())
  name    String    @default("")
  kindred Kindred[]
}

 
// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
